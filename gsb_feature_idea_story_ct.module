<?php
/**
 * @file
 * Code for the GSB Feature Idea Story Content Type feature.
 */

include_once 'gsb_feature_idea_story_ct.features.inc';

/**
 * Implements hook_form_FORM_ID_alter() for event node edit form.
 */
function gsb_feature_idea_story_ct_form_idea_story_node_form_alter(&$form, &$form_state, $form_id) {

  if ($form_id != 'idea_story_node_form') {
    return;
  }

  $language = $form['language']['#value'];

  $form['field_link_key_audio']['#states'] = array(
    'visible' => array(
      ':input[name="field_icon[' . $language . ']"]' => array(
        array('value' => 'audio'),
      ),
    ),
  );

  $form['field_link_key_video']['#states'] = array(
    'visible' => array(
      ':input[name="field_icon[' . $language . ']"]' => array(
        array('value' => 'video'),
      ),
    ),
  );

  // Add required field markers. The actual field validation is done in validate callback.
  if (!empty($form['field_program_unlimited'][$language])) {
    $form['field_program_unlimited'][$language]['#title'] .= " " . theme('form_required_marker');
  }

  // Define visibility states for Alumni Mentioned.
  $form['field_program_unlimited']['#states']['invisible'][':input[name="field_alumni_story[' . $language . ']"]'] = array(
    array('checked' => FALSE),
  );

  // Define visibility states for Rethink fields.
 /* $form['field_rethink_date']['#states']['invisible'][':input[name="field_part_of_rethink[' . $language . ']"]'] = array(
    array('value' => 0),
  );*/

  // Define visibility states for Stanford Business Magazine fields.
 /* $form['field_season']['#states']['invisible'][':input[name="field_part_of_business_magazine[' . $language . ']"]'] = array(
    array('value' => 0),
  );

  $form['field_year']['#states']['invisible'][':input[name="field_part_of_business_magazine[' . $language . ']"]'] = array(
    array('value' => 0),
  );

  $form['field_volume_number']['#states']['invisible'][':input[name="field_part_of_business_magazine[' . $language . ']"]'] = array(
    array('value' => 0),
  );

  $form['field_issue_number']['#states']['invisible'][':input[name="field_part_of_business_magazine[' . $language . ']"]'] = array(
    array('value' => 0),
  );*/

  $form['#after_build'][] = 'gsb_feature_idea_story_ct_after_build';

  // Perform additional validation.
  $form['#validate'][] = 'gsb_feature_idea_story_ct_idea_story_node_form_validate';
}

/**
 * gsb_feature_idea_story_ct_after_build()
 *
 * Adds the js needed for replace the key taxonomy select field with
 * our hierarchy lite select field.
 */
function gsb_feature_idea_story_ct_after_build($form, &$form_state) {
  $form['field_link_unlimited']['und']['#title'] = 'Link Title';
  $form['field_link_unlimited']['und'][0]['title']['#title'] = 'Link Title';
  return $form;
}

/**
 * Validate callback for idea_story_node_form.
 *  - Conditionally validate alumni story fields.
 */
function gsb_feature_idea_story_ct_idea_story_node_form_validate($form, &$form_state) {
  $language = $form['language']['#value'];
  $values = $form_state['values'];

  // If idea_story is an alumni story we need to manually validate some required fields.
  if ($values['field_alumni_story'][$language][0]['value'] == TRUE) {

    if (empty($values['field_program_unlimited'][$language][0]['tid'])) {
      $field_label = $form['field_program_unlimited'][$language]['#title'];
      form_set_error('field_program_unlimited]['.$language.'][0][tid', $field_label . ' field is required.');
    }
  }
  else {
    $form_state['complete form']['field_program_unlimited']['und']['#value'] = array();
    $form_state['values']['field_program_unlimited']['und'] = array();
  }
}

/**
 * Implements hook_date_popup_process_alter().
 */
function gsb_feature_idea_story_ct_date_popup_process_alter(&$element, &$form_state, $context) {
  if ($form_state['build_info']['form_id'] != 'idea_story_node_form') {
    return;
  }
  if (isset($element['#field']['field_name']) && $element['#field']['field_name'] == 'field_date') {
    $element['date']['#description'] = '';
  }
}

/**
 * Implements hook_field_widget_WIDGET_TYPE_form_alter().
 */
function gsb_feature_idea_story_ct_field_widget_entityreference_autocomplete_form_alter(&$element, &$form_state, $context) {
  if ($form_state['build_info']['form_id'] != 'idea_story_node_form') {
    return;
  }
  if (isset($element['target_id']['#field_name']) && $element['target_id']['#field_name'] == 'field_person_fac_ref') {
    $element['target_id']['#title'] = 'Faculty Name';
    $element['target_id']['#title_display'] = 'before';
  }
  if (isset($element['target_id']['#field_name']) && $element['target_id']['#field_name'] == 'field_related_idea_story') {
    $element['target_id']['#title'] = 'Existing Node Title';
    $element['target_id']['#title_display'] = 'before';
  }
  if (isset($element['target_id']['#field_name']) && $element['target_id']['#field_name'] == 'field_related_other_content') {
    $element['target_id']['#title'] = 'Existing Node Title';
    $element['target_id']['#title_display'] = 'before';
  }
  if (isset($element['target_id']['#field_name']) && $element['target_id']['#field_name'] == 'field_related_events') {
    $element['target_id']['#title'] = 'Existing Node Title';
    $element['target_id']['#title_display'] = 'before';
  }
}
/**
 * Implements hook_field_extra_fields().
 */
function gsb_feature_idea_story_ct_field_extra_fields() {
  $extra['field_collection_item']['field_related_other_unlimited']['display']['related_content_label'] = array(
    'label' => t('Related content entity: Title'),
    'description' => t('Title from referenced entity field.'),
    'weight' => 1,
  );

  $extra['node']['idea_story']['display']['gsb_feature_idea_story_ct_explore_more'] = array(
    'label' => t('Explore more'),
    'description' => t('Shows 3 best matching idea stories by Key Taxonomy.'),
    'weight' => 20,
  );

  $extra['node']['idea_story']['display']['insights_signup_form'] = array(
    'label' => t('Insights signup form'),
    'description' => t('Displays a "Sign up for more insights & ideaas." form'),
    'weight' => 21,
  );

  $extra['fieldable_panels_pane']['quotes']['display']['quotes_title'] = array(
    'label' => t('Quotes title'),
    'description' => t('Shows quote with link to Existing node'),
    'weight' => 22,
  );

  return $extra;
}

/**
 * Implements hook_entity_view().
 *
 *  - Render referenced entity title from 'field_related_other' field as an extra field.
 */
function gsb_feature_idea_story_ct_entity_view($entity, $type, $view_mode, $langcode) {
  if ($type == 'field_collection_item' && $entity->field_name == 'field_related_other_unlimited') {
    // If this field is not configured for this view mode, skip it.
    $fields = field_extra_fields_get_display($type, $entity->field_name, $view_mode);
    if (empty($fields['related_content_label']['visible'])) {
      return;
    }

    $wrapper = entity_metadata_wrapper($type, $entity);

    if ($wrapper->field_related_other_content->value()) {
      // Add extra field that displays referenced entity title.
      $entity->content['related_content_label'] = array(
        '#theme' => 'link',
        '#path' => 'node/' . $wrapper->field_related_other_content->getIdentifier(),
        '#text' => $wrapper->field_related_other_content->label(),
        '#prefix' => '<h3>',
        '#suffix' => '</h3>',
        '#options' => array(
          'attributes' => array(
            'class' => array('field-name-field-title'),
            ),
          'html' => FALSE,
        ),
      );
      if (in_array($wrapper->field_related_other_content->value()->type, array('event', 'admission_event'))) {
        if (!empty($wrapper->field_related_other_content->field_link_single->value()['url'])) {
          $entity->content['related_content_label']['#path'] = $wrapper->field_related_other_content->field_link_single->value()['url'];
          if (!empty($wrapper->field_related_other_content->field_link_single->value()['attributes']['target'])) {
            $entity->content['related_content_label']['#options']['attributes']['target'] = $wrapper->field_related_other_content->field_link_single->value()['attributes']['target'];
          }
        }
      }
    }
  }

  /**
   * Explore more extra field.
   *  - Pick 3 most relevant nodes by Key Taxonomy.
   */
  if ($type == 'node' && $entity->type == 'idea_story') {
    // If this field is not configured for this view mode, skip it.
    $fields = field_extra_fields_get_display('node', $entity->type, $view_mode);
    if (empty($fields['gsb_feature_idea_story_ct_explore_more']['visible'])) {
      return;
    }

    $wrapper = entity_metadata_wrapper($type, $entity);
    $tids = array();
    foreach ($wrapper->field_key_taxonomy as $term) {
      if ($term->value()) {
        $tids[] = $term->value()->tid;
      }
    };

    if (empty($tids)) {
      return;
    }
    $result = db_query("
      SELECT n.nid, fd.field_date_value created, COUNT(t.tid) score
      FROM {node} n
      INNER JOIN {field_data_field_date} fd ON fd.entity_id = n.nid
      INNER JOIN {field_data_field_key_taxonomy} kt ON kt.entity_id = n.nid
      INNER JOIN {taxonomy_term_data} t ON t.tid = kt.field_key_taxonomy_target_id
      WHERE nid != :nid
      AND n.type = 'idea_story'
      AND t.tid IN (:tids)
      AND n.status = 1
      GROUP BY n.nid
      ORDER BY score DESC, created DESC
      LIMIT 3
    ", array(':nid' => $entity->nid, ':tids' => $tids))->fetchAllAssoc('nid');

    $nids = array_keys($result);

    if ($nids) {
      $nodes = node_load_multiple($nids);
      $content = node_view_multiple($nodes, 'teaser');

      // Wrap content in container.
      $content_wrapper = array(
        '#type' => 'container',
        '#attributes' => array(
          'class' => array('explore-more-content'),
        ),
      );
      $content_wrapper['content'] = $content;
      // Wrap content and title in container.
      $container = array(
        '#type' => 'container',
        '#attributes' => array(
          'class' => array('explore-more-wrapper'),
        ),
      );

      // Add a title.
      $container['title'] = array('#markup' => '<div class="superhead">' . t('Explore More') . '</div>');
      $container['content'] = $content_wrapper;

      $entity->content['gsb_feature_idea_story_ct_explore_more'] = $container;
    }
  }

  if ($type == 'fieldable_panels_pane' && $entity->bundle == 'quotes') {
    $language = $entity->language;
    $body = !empty($entity->field_body[$language][0]['value']) ? $entity->field_body[$language][0]['value']  : '';
    $attribution = !empty($entity->field_attribution[$language][0]['value']) ? $entity->field_attribution[$language][0]['value'] : '';
    $attribution_title = !empty($entity->field_attribution_title[$language][0]['value']) ? $entity->field_attribution_title[$language][0]['value'] : '';
    if (!empty($entity->field_existing_node_title_ref)){
      $wrapper = entity_metadata_wrapper('node', $entity->field_existing_node_title_ref[$language][0]['target_id']);
      $quotes_markup = '<a href='.base_path().$wrapper->value()->path['alias'].'><span class="first-double-apostrophe">&ldquo;</span>
        <span class="quote">'.$body.'</span><span class="last-double-apostrophe">&rdquo;</span><br/>
        <span class="dash">—</span><span class="attribution">'.$attribution.'</span><br/>
        <span class="attribution-title">'.$attribution_title.'</span></a>';
    }
    else {
      $quotes_markup = '<span class="first-double-apostrophe">&ldquo;</span>
        <span class="quote">'.$body.'</span>
        <span class="last-double-apostrophe">&rdquo;</span><br/><span class="dash">—</span>
        <span class="attribution">'.$attribution.'</span><br/>
        <span class="attribution-title">'.$attribution_title.'</span>';
    }

    $entity->content['quotes_title'] = array(
     '#type' => 'container',
     '#attributes' => array(
       'class' => array(
          'quotes-title',
        ),
      ),
     '#children' => $quotes_markup,
    );
  }
}

/**
 * Implements hook_ds_pre_render_alter()
 *
 * Determine if top stories and related sections have any items.
 * If they don't, then we will remove them so that they do not render as empty sections
 */
function gsb_feature_idea_story_ct_ds_pre_render_alter(&$layout_render_array, $context, &$vars) {

  // if the context is an idea story, and the view mode is full
  if (!empty($context['bundle']) && $context['bundle'] == 'idea_story' && $context['view_mode'] == 'full') {

    // get the list of top stories
    $top_stories = variable_get('gsb_feature_idea_story_display_top_stories', array());

    // determine if there are any top stories
    $no_top_stories = TRUE;
    foreach($top_stories as $top_story_nid) {
      if ($top_story_nid != null) {
        $no_top_stories = FALSE;
        break;
      }
    }

    // get the id for the top story and related section in the right-hand layout
    $related_id = -1;
    $top_story_id = -1;
    foreach($layout_render_array['right'] as $key => $right_stuff) {
      if (!empty($right_stuff['#markup'])) {
        if (strstr($right_stuff['#markup'],'top-stories-fieldset')) {
          $top_story_id = $key;
        }
      }
      if (!empty($right_stuff['#id'])) {
        $related_id = $key;
      }
    }

    if ($related_id != -1) {
      $related_faculty = array();
      if (!empty($context['entity']->field_related_faculty)) {
        $item_id = $context['entity']->field_related_faculty['und'][0]['value'];
        $related_faculty = $layout_render_array['right'][$related_id]['field_related_faculty'][0]['entity']['field_collection_item'][$item_id]['#entity']->field_person_fac_single_ref;
      }
      $publication = array();
      if (!empty($context['entity']->field_related_other_unlimited)) {
        $item_id = $context['entity']->field_related_other_unlimited['und'][0]['value'];
        $publication = $layout_render_array['right'][$related_id]['field_related_other_unlimited'][0]['entity']['field_collection_item'][$item_id]['#entity']->field_related_other_content;
      }
      $idea_story = array();
      if (!empty($layout_render_array['right'][$related_id]['field_related_idea_story'])) {
        $idea_story = $layout_render_array['right'][$related_id]['field_related_idea_story'];
      }
      $links = array();
      if (!empty($layout_render_array['right'][$related_id]['field_link_unlimited'])) {
        $links = $layout_render_array['right'][$related_id]['field_link_unlimited'];
      }
      // remove the related section if there are no items
      if(empty($related_faculty) && empty($publication) && empty($idea_story) && empty($links)) {
        unset($layout_render_array['right'][$related_id]);
      }
      if (empty($related_faculty)) {
        unset($layout_render_array['right'][$related_id]['field_related_faculty']);
      }
    }

    // remove the top stories section if there are no items
    if ($no_top_stories && $top_story_id != -1) {
      unset($layout_render_array['right'][$top_story_id]);
    }

  }

}

/**
 * Implements hook_node_export_node_import_alter()
 *
 * Maintains original nid while importing data using node export module
 */

function gsb_feature_idea_story_ct_node_export_node_import_alter(&$node, &$original_node, &$save_node) {
$node->nid = $original_node->nid;
$node->is_new = TRUE;
$node = node_submit($node);
node_save($node);
}
